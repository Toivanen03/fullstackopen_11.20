name: CI pipeline

on:
  push:
  pull_request:
    types: [opened, synchronize]

jobs:
  end-to-end_tests:
    name: end-to-end_tests
    timeout-minutes: 60
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: lts/*
      - name: Make build script executable
        run: chmod +x build_step_for_e2e-tests.sh
      - name: Installing dependencies
        run: ./build_step_for_e2e-tests.sh
      - name: Install Playwright Browsers
        run: npx playwright install --with-deps
      - name: Run Playwright tests
        run: npx playwright test
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
      - name: End-to-end test outcome
        run: echo "End-to-end tests completed."
        if: always()

  other_tests:
    name: other_tests
    needs: end-to-end_tests
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Make build script executable
        run: chmod +x build_step_for_other_tests.sh
      - name: Run Jest & ESLint tests
        run: ./build_step_for_other_tests.sh
      - name: Jest & lint test outcome
        run: echo "Jest and ESLint tests completed."
        if: always()

  deployment:
    needs: other_tests
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Trigger deployment
        if: (!contains(join(github.event.commits.*.message, ' '), '#skip'))
        run: curl -f https://api.render.com/deploy/srv-${{ secrets.RENDER_SERVICE_ID }}?key=${{ secrets.RENDER_API_KEY }}
      - name: Deployment outcome
        run: echo "Deployment step completed."
        if: always()

  bump_version:
    needs: deployment
    if: ${{ success() && github.event_name == 'push' && github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Bump version and push tag
        if: (!contains(join(github.event.commits.*.message, ' '), '#skip'))
        uses: anothrNick/github-tag-action@f278d49d30cdd8775cc3e7dd00b5ee11686ee297
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DEFAULT_BUMP: patch
      - name: Versioning outcome
        if: always()
        run: echo "Versioning step completed."

  discord_notify:
    needs: [end-to-end_tests, other_tests, deployment, bump_version]
    if: always()
    runs-on: ubuntu-22.04
    steps:
      - name: Set status emoji
        id: set-status
        run: |
          function status_emoji() {
            case "$1" in
              success) echo "✅ success" ;;
              failure) echo "❌ failure" ;;
              cancelled) echo "⚠️ cancelled" ;;
              *) echo "❓ $1" ;;
            esac
          }

          echo "e2e_status=$(status_emoji '${{ needs.end-to-end_tests.result }}')" >> $GITHUB_OUTPUT
          echo "other_status=$(status_emoji '${{ needs.other_tests.result }}')" >> $GITHUB_OUTPUT
          echo "deploy_status=$(status_emoji '${{ needs.deployment.result }}')" >> $GITHUB_OUTPUT
          echo "bump_status=$(status_emoji '${{ needs.bump_version.result }}')" >> $GITHUB_OUTPUT

      - name: Discord notification
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        uses: Ilshidur/action-discord@0c4b27844ba47cb1c7bee539c8eead5284ce9fa9
        with:
          args: |
            ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
            @simotoivanentivi23v0603  

            *${{ github.actor }}* made a ${{ github.event_name }} on **${{ github.repository }}**.  

            **Commit:** [View commit](<https://github.com/Toivanen03/fullstackopen_11.20/commit/${{ github.sha }}>)  

            **Status:**
            🔹 **E2E Tests:** ${{ steps.set-status.outputs.e2e_status }}  
            🔹 **Jest/Lint:** ${{ steps.set-status.outputs.other_status }}  
            🔹 **Deployment:** ${{ steps.set-status.outputs.deploy_status }}  
            🔹 **Version bump:** ${{ steps.set-status.outputs.bump_status }}  
            ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━